import { Occupancy, OccupancyListener } from '../../core/occupancy.js';
import { ChatStatusResponse } from '../types/chat-status-response.js';
import { Listenable } from '../types/listenable.js';
import { StatusParams } from '../types/status-params.js';
/**
 * The options for the {@link useOccupancy} hook.
 */
export interface UseOccupancyParams extends StatusParams, Listenable<OccupancyListener> {
    /**
     * A listener that will be called whenever an occupancy event is received.
     * The listener is removed when the component unmounts.
     */
    listener?: OccupancyListener;
}
/**
 * The response type from the {@link useOccupancy} hook.
 */
export interface UseOccupancyResponse extends ChatStatusResponse {
    /**
     * The current number of users connected to the room, kept up to date by the hook.
     */
    readonly connections: number;
    /**
     * The current number of users present in the room, kept up to date by the hook.
     */
    readonly presenceMembers: number;
    /**
     * Provides access to the underlying {@link Occupancy} instance of the room.
     */
    readonly occupancy?: Occupancy;
}
/**
 * A hook that provides access to the {@link Occupancy} instance of the room.
 * It will use the instance belonging to the nearest {@link ChatRoomProvider} in the component tree.
 *
 * @param params - Allows the registering of optional callbacks.
 * @returns UseOccupancyResponse
 */
export declare const useOccupancy: (params?: UseOccupancyParams) => UseOccupancyResponse;
