import { RoomReactionListener, RoomReactions } from '../../core/room-reactions.js';
import { ChatStatusResponse } from '../types/chat-status-response.js';
import { Listenable } from '../types/listenable.js';
import { StatusParams } from '../types/status-params.js';
/**
 * The parameters for the {@link useRoomReactions} hook.
 */
export interface UseRoomReactionsParams extends StatusParams, Listenable<RoomReactionListener> {
    /**
     * A listener that will be called whenever a reaction is sent to the room.
     */
    listener?: RoomReactionListener;
}
/**
 * The response type from the {@link useRoomReactions} hook.
 */
export interface UseRoomReactionsResponse extends ChatStatusResponse {
    /**
     * A shortcut to the {@link RoomReactions.send} method.
     */
    readonly send: RoomReactions['send'];
    /**
     * Provides access to the underlying {@link RoomReactions} instance of the room.
     */
    readonly reactions?: RoomReactions;
}
/**
 * A hook that provides access to the {@link RoomReactions} instance in the room.
 * It will use the instance belonging to the nearest {@link ChatRoomProvider} in the component tree.
 *
 * @param params - Allows the registering of optional callbacks.
 * @returns UseRoomReactionsResponse
 */
export declare const useRoomReactions: (params?: UseRoomReactionsParams) => UseRoomReactionsResponse;
